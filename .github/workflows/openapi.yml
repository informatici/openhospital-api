# This workflow will update the oh.yaml OpenAPI specification
# For more information see: https://swagger.io/

name: OpenAPI spec generation

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Checkout core
        run: git clone --depth=50 --branch=develop https://github.com/informatici/openhospital-core.git openhospital-core

      - name: Install core
        run: cd openhospital-core && mvn install -DskipTests=true && cd ..

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

#      - name: Generate JWT Token
#        id: jwt
#        run: echo "::set-output name=token::7DlyD1SHR5pCa4HGgTLWSYm8YQ7oRL1wpPbxyjWyHU44vUrqrooRu3lHVFSXWChesc"

      - name: Branch used
        id: extract_branch
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            echo "::set-output name=branch::$(echo ${GITHUB_REF##*/})"
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            echo "::set-output name=branch::$(echo $GITHUB_BASE_REF)"
          else
            echo "::set-output name=branch::INVALID_EVENT_BRANCH_UNKNOWN"
          fi
          
      - name: Generate OpenAPI yaml
        run: mvn springdoc-openapi:generate
        
#      - name: Run API
#        run: |
#          cd target
#          java -cp "openhospital-api-0.1.0.jar:rsc/:static/" org.springframework.boot.loader.JarLauncher &
#          sleep 60
        
#      - name: Get json
#        run: curl -o openapi/oh.json http://localhost:8080/v3/api-docs

#      - name: Get yaml
#        run: curl -o openapi/oh.yaml http://localhost:8080/v3/api-docs.yaml

#      - name: Convert to json to yaml
#        uses: mikefarah/yq@master
#        with:
#          cmd: yq -p json -o yaml openapi/oh.json > openapi/oh.yaml

      - name: Update PR
        uses: gr2m/create-or-update-pull-request-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit-message: "GitHub Action: update openapi"
          path: "openapi"
          branch: ${{ steps.extract_branch.outputs.branch }}