# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  pull_request:
  push:
    paths-ignore:
      - 'openapi/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Checkout core
        run: git clone --depth=50 --branch=develop https://github.com/informatici/openhospital-core.git openhospital-core

      - name: Install core
        run: cd openhospital-core && mvn install -DskipTests=true && cd ..

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Generate JWT Token
        id: jwt
        run: echo "token=7DlyD1SHR5pCa4HGgTLWSYm8YQ7oRL1wpPbxyjWyHU44vUrqrooRu3lHVFSXWChesc" >> $GITHUB_OUTPUT

      - name: Store branch name
        id: extract_branch
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            echo "branch=$(echo ${GITHUB_REF##*/})" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            echo "branch=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_OUTPUT
          else
            echo "branch=INVALID_EVENT_BRANCH_UNKNOWN" >> $GITHUB_OUTPUT
          fi
          
      - name: Build with Maven
        run: |
          cp rsc/application.properties.dist rsc/application.properties
          cp rsc/database.properties.dist rsc/database.properties
          cp rsc/log4j.properties.dist rsc/log4j.properties
          cp rsc/settings.properties.dist rsc/settings.properties
          sed -e "s/JWT_TOKEN_SECRET/${{ steps.jwt.outputs.token }}/g" rsc/application.properties.dist > rsc/application.properties
          mvn install -DskipTests=true
          echo ${{ steps.extract_branch.outputs.branch }}
          
      - name: Run API
        if: ${{ github.actor != 'github-actions[bot]' }}      
        run: |
          cd target
          java -cp "openhospital-api-0.1.0.jar:rsc/:static/" org.springframework.boot.loader.JarLauncher &
          sleep 60
          
      - name: Generate OpenAPI yaml
        if: ${{ github.actor != 'github-actions[bot]' }}
        run: mvn springdoc-openapi:generate

      - name: Update PR with OpenAPI specs changes (if any)
        if: ${{ github.actor != 'github-actions[bot]' }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git clone --depth=1 --branch="${{ steps.extract_branch.outputs.branch }}" https://${{ github.repository_owner }}:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository_owner }}/openhospital-api.git origin-branch
          cp -r openapi origin-branch/
          cd origin-branch
          git add .
          git commit -m "Update OpenAPI specs"
          git push origin "${{ steps.extract_branch.outputs.branch }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
