/*
 * Open Hospital (www.open-hospital.org)
 * Copyright Â© 2006-2023 Informatici Senza Frontiere (info@informaticisenzafrontiere.org)
 *
 * Open Hospital is a free and open source software for healthcare data management.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * https://www.gnu.org/licenses/gpl-3.0-standalone.html
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package org.isf.patient.dto;

import java.time.LocalDate;

import javax.validation.constraints.NotNull;

import com.drew.lang.annotations.Nullable;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

@ApiModel(description = "Class representing a patient")
public class PatientDTO {

	@ApiModelProperty(notes = "code of the Patient", example= "1", position = 1)
	private Integer code;

	@NotNull
	@ApiModelProperty(notes = "First name of the patient", example="Mario", position = 2)
	private String firstName;

	@NotNull
	@ApiModelProperty(notes = "Last name of the patient", example="Rossi", position = 3)
	private String secondName;

	private String name;

	@ApiModelProperty(notes = "Birth date", example="1979-05-01", position = 4)
	private LocalDate birthDate;

	@NotNull
	@ApiModelProperty(notes = "Age", example="40", position = 5)
	private int age;

	@ApiModelProperty(notes = "Age type", example="null", position = 6)
	private String agetype;

	@NotNull
	@ApiModelProperty(notes = "Sex", allowableValues = "F,M", example = "M", position = 7)
	private char sex;

	@ApiModelProperty(notes = "Address", example="Via Roma, 12", position = 8)
	private String address;

	@NotNull
	@ApiModelProperty(notes = "City", example="Verona", position = 9)
	private String city;

	private String nextKin;

	@ApiModelProperty(notes = "Telephone", example="+393456789012", position = 10)
	private String telephone;

	@ApiModelProperty(notes = "Note", example="Test insert new patient", position = 11)
	private String note;

	@NotNull
	@ApiModelProperty(notes = "Mother's name", example="Roberta", position = 12)
	private String motherName;

	@ApiModelProperty(notes = "Mother's status (D=dead, A=alive)", allowableValues = "D,A", example="A", position = 13)
	private char mother ;

	@NotNull
	@ApiModelProperty(notes = "Father's name", example="Giuseppe", position = 14)
	private String fatherName;

	@ApiModelProperty(notes = "Father's status (D=dead, A=alive)", allowableValues = "D,A", example="D", position = 15)
	private char father;

	@NotNull
	@ApiModelProperty(notes = "Blood type (0-/+, A-/+ , B-/+, AB-/+)", allowableValues = "0-,0+,A-,A+,B-,B+,AB-,AB+", example="A+", position = 16)
	private String bloodType;

	@ApiModelProperty(notes = "hasInsurance (Y=Yes, N=no)", allowableValues = "Y,N", example="N", position = 17)
	private char hasInsurance;

	@ApiModelProperty(notes = "Parent together (Y=Yes, N=no)", allowableValues = "Y,N", example="N", position = 18)
	private char parentTogether;

	@ApiModelProperty(notes = "Tax code", example="RSSMRA79E01L781N", position = 19)
	private String taxCode;

	@ApiModelProperty(notes = "lock", example = "0")
	private int lock;

	@ApiModelProperty(notes = "BlobPhoto", example="", position = 22)
	private byte[] blobPhoto;

	private int hashCode = 0;
	
	@Nullable
	@ApiModelProperty(notes = "allergies of patient", position = 22)
	private String allergies; // ADDED: Arnaud
	
	@Nullable
	@ApiModelProperty(notes = "Current anamnesis", position = 23)
	private String anamnesis; // ADDED: Arnaud

	@ApiModelProperty(notes = "status", example="I", position = 24)
	private PatientSTATUS status;

	public int getLock() {
		return lock;
	}

	public String getAllergies() {
		return allergies;
	}

	public void setAllergies(String allergies) {
		this.allergies = allergies;
	}

	public String getAnamnesis() {
		return anamnesis;
	}

	public void setAnamnesis(String anamnesis) {
		this.anamnesis = anamnesis;
	}

	@ApiModelProperty(hidden = true)
    public Integer getCode() {
        return code;
    }

    @ApiModelProperty(hidden=true)
    public String getName() {
        return name;
    }

    @ApiModelProperty(hidden=true)
    public String getNextKin() {
        return nextKin;
    }

    @ApiModelProperty(hidden=true)
    public int getHashCode() {
        return hashCode;
    }

	public String getFirstName() {
		return this.firstName;
	}

	public String getSecondName() {
		return this.secondName;
	}

	public LocalDate getBirthDate() {
		return this.birthDate;
	}

	public int getAge() {
		return this.age;
	}

	public String getAgetype() {
		return this.agetype;
	}

	public char getSex() {
		return this.sex;
	}

	public String getAddress() {
		return this.address;
	}

	public String getCity() {
		return this.city;
	}

	public String getTelephone() {
		return this.telephone;
	}

	public String getNote() {
		return this.note;
	}

	public char getMother() {
		return this.mother;
	}

	public char getFather() {
		return this.father;
	}

	public String getBloodType() {
		return this.bloodType;
	}

	public char getHasInsurance() {
		return this.hasInsurance;
	}

	public char getParentTogether() {
		return this.parentTogether;
	}

	public String getTaxCode() {
		return this.taxCode;
	}

	public byte[] getBlobPhoto() {
		return this.blobPhoto;
	}

	public void setCode(Integer code) {
		this.code = code;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public void setSecondName(String secondName) {
		this.secondName = secondName;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setBirthDate(LocalDate birthDate) {
		this.birthDate = birthDate;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public void setAgetype(String agetype) {
		this.agetype = agetype;
	}

	public void setSex(char sex) {
		this.sex = sex;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public void setCity(String city) {
		this.city = city;
	}

	public void setNextKin(String nextKin) {
		this.nextKin = nextKin;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	public void setNote(String note) {
		this.note = note;
	}

	public void setMother(char mother) {
		this.mother = mother;
	}

	public void setFather(char father) {
		this.father = father;
	}

	public void setBloodType(String bloodType) {
		this.bloodType = bloodType;
	}

	public void setHasInsurance(char hasInsurance) {
		this.hasInsurance = hasInsurance;
	}

	public void setParentTogether(char parentTogether) {
		this.parentTogether = parentTogether;
	}

	public void setTaxCode(String taxCode) {
		this.taxCode = taxCode;
	}

	public void setLock(int lock) {
		this.lock = lock;
	}

	public void setBlobPhoto(byte[] blobPhoto) {
		this.blobPhoto = blobPhoto;
	}

	public void setHashCode(int hashCode) {
		this.hashCode = hashCode;
	}
	
	public PatientSTATUS getStatus() {
		return status;
	}
	
	public PatientSTATUS setStatus(PatientSTATUS status) {
		return this.status = status;
	}

	public String getMotherName() {
		return motherName;
	}

	public void setMotherName(String motherName) {
		this.motherName = motherName;
	}

	public String getFatherName() {
		return fatherName;
	}

	public void setFatherName(String fatherName) {
		this.fatherName = fatherName;
	}
    
}
