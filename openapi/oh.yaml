openapi: 3.0.1
info:
  title: Scholarship API Documentation
  description: Scholarship API Documentation
  contact:
    name: ApiInfo.DEFAULT_CONTACT
  version: "1.0"
servers:
- url: http://localhost:8080
- url: https://api.scholarships.uni2growcameroun.com
security:
- bearerAuth: []
tags:
- name: DocumentTypes
  description: Document Types APIs
- name: HighSchoolResume
  description: High School Resume APIs
- name: Sessions
  description: Session controller
- name: Auth
  description: Authentication APIs
- name: Users
  description: Users APIs
- name: Documents
  description: Document APIs
- name: Extra Activities
  description: Extra Activity APIs
- name: Quotes
  description: Quotes APIs
- name: School Levels
  description: School levels controller
- name: Files
  description: Files APIs
- name: Family
  description: Family APIs
- name: SchoolResults
  description: School Results APIs
- name: Handicaps
  description: Handicap APIs
- name: BacTypes
  description: BacType APIs
- name: Applications
  description: Application APIs
- name: Financing
  description: Financing APIs
- name: Statistics
  description: Statistics APIs
paths:
  /users:
    get:
      tags:
      - Users
      operationId: findAllUsers
      parameters:
      - name: page
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: sort
        in: query
        required: false
        schema:
          type: string
          default: created:DESC
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: filter
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageUserDTO'
    put:
      tags:
      - Users
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
  /users/{id}/role:
    put:
      tags:
      - Users
      operationId: toggleAdminRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
  /users/student:
    put:
      tags:
      - Users
      operationId: updateStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudentDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDTO'
  /sessions/{id}:
    get:
      tags:
      - Sessions
      operationId: findSessionById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionDTO'
    put:
      tags:
      - Sessions
      operationId: updateSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionDTO'
    delete:
      tags:
      - Sessions
      operationId: deleteSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
    patch:
      tags:
      - Sessions
      operationId: patchSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSessionDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionDTO'
  /sessions/{id}/status/{status}:
    put:
      tags:
      - Sessions
      operationId: changeSessionStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: status
        in: path
        required: true
        schema:
          type: string
          enum:
          - NEW
          - OPEN
          - SUSPENDED
          - CLOSED
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /school-results/{id}:
    get:
      tags:
      - SchoolResults
      operationId: findSchoolResultById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolResultDTO'
    put:
      tags:
      - SchoolResults
      operationId: updateSchoolResult
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchoolResultDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolResultDTO'
    delete:
      tags:
      - SchoolResults
      operationId: deleteSchoolResult
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /quotes/{id}:
    get:
      tags:
      - Quotes
      operationId: findQuoteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteDTO'
    put:
      tags:
      - Quotes
      operationId: updateQuote
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateQuoteDTO'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteDTO'
    delete:
      tags:
      - Quotes
      operationId: deleteQuote
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /high-school-resumes/{id}:
    get:
      tags:
      - HighSchoolResume
      operationId: findHighSchoolResumeById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolResumeDTO'
    put:
      tags:
      - HighSchoolResume
      operationId: updateHighSchoolResume
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHighSchoolResumeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolResumeDTO'
    delete:
      tags:
      - HighSchoolResume
      operationId: deleteHighSchoolResume
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /families/{id}:
    get:
      tags:
      - Family
      operationId: findFamilyById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyDTO'
    put:
      tags:
      - Family
      operationId: updateFamily
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFamilyDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyDTO'
    delete:
      tags:
      - Family
      operationId: deleteFamily
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
    patch:
      tags:
      - Family
      operationId: patchFamily
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchFamilyDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyDTO'
  /families/members/{id}:
    put:
      tags:
      - Family
      operationId: updateFamilyMember
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFamilyMemberDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyMemberDTO'
    delete:
      tags:
      - Family
      operationId: deleteFamilyMember
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /applications/{id}:
    get:
      tags:
      - Applications
      operationId: findApplicationById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDTO'
    put:
      tags:
      - Applications
      operationId: updateApplication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDTO'
    delete:
      tags:
      - Applications
      operationId: deleteApplication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /applications/financing/{id}:
    get:
      tags:
      - Financing
      operationId: findFinancingById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingDTO'
    put:
      tags:
      - Financing
      operationId: updateFinancing
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFinancingDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingDTO'
    delete:
      tags:
      - Financing
      operationId: deleteFinancing
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /applications/extra-activities/{id}:
    get:
      tags:
      - Extra Activities
      operationId: findExtraActivityById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraActivityDTO'
    put:
      tags:
      - Extra Activities
      operationId: updateExtraActivity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtraActivityDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraActivityDTO'
    delete:
      tags:
      - Extra Activities
      operationId: deleteExtraActivity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /sessions:
    get:
      tags:
      - Sessions
      operationId: findSessions
      parameters:
      - name: page
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: sort
        in: query
        required: false
        schema:
          type: string
          default: created:DESC
      - name: filter
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSessionDTO'
    post:
      tags:
      - Sessions
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionDTO'
  /school-results:
    get:
      tags:
      - SchoolResults
      operationId: findSchoolResultForCurrentUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolResultDTO'
    post:
      tags:
      - SchoolResults
      operationId: createSchoolResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchoolResultDTO'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolResultDTO'
  /quotes:
    get:
      tags:
      - Quotes
      operationId: findAllQuotes
      parameters:
      - name: page
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: sort
        in: query
        required: false
        schema:
          type: string
          default: created:DESC
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageQuoteDTO'
    post:
      tags:
      - Quotes
      operationId: createQuote
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateQuoteDTO'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteDTO'
  /high-school-resumes:
    get:
      tags:
      - HighSchoolResume
      operationId: findHighSchoolResumeForCurrentUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolResumeDTO'
    post:
      tags:
      - HighSchoolResume
      operationId: createHighSchoolResume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHighSchoolResumeDTO'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolResumeDTO'
  /files/upload:
    post:
      tags:
      - Files
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /families:
    post:
      tags:
      - Family
      operationId: createFamily
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFamilyDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyDTO'
  /families/{id}/members:
    get:
      tags:
      - Family
      operationId: getFamilyMembers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FamilyMemberDTO'
    post:
      tags:
      - Family
      operationId: addFamilyMember
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFamilyMemberDTO'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyMemberDTO'
  /documents:
    get:
      tags:
      - Documents
      operationId: findAllDocuments
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentDTO'
    post:
      tags:
      - Documents
      operationId: createDocument
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadDocumentDTO'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDTO'
  /documents/multiple:
    post:
      tags:
      - Documents
      operationId: addMultipleDocuments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadMultipleDocumentDTO'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentDTO'
  /auth/verify/{token}:
    post:
      tags:
      - Auth
      operationId: verifyAccount
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /auth/sign-up:
    post:
      tags:
      - Auth
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDTO'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
  /auth/sign-in:
    post:
      tags:
      - Auth
      operationId: signIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
  /auth/resend-signup-email/{email}:
    post:
      tags:
      - Auth
      operationId: resendSignupEmail
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /auth/password/reset:
    post:
      tags:
      - Auth
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /auth/password/forget:
    post:
      tags:
      - Auth
      operationId: forgetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordForgetDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /auth/password/change:
    post:
      tags:
      - Auth
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /applications:
    get:
      tags:
      - Applications
      operationId: findCandidates
      parameters:
      - name: page
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: sort
        in: query
        required: false
        schema:
          type: string
          default: created:DESC
      - name: filter
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCandidateDTO'
    post:
      tags:
      - Applications
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationDTO'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDTO'
  /applications/{id}/submit:
    post:
      tags:
      - Applications
      operationId: submitApplication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /applications/{id}/rating:
    get:
      tags:
      - Applications
      operationId: findRatingById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingDTO'
    post:
      tags:
      - Applications
      operationId: savingRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRatingDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingDTO'
    delete:
      tags:
      - Applications
      operationId: deleteRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /applications/save-total-scores/{sessionId}:
    post:
      tags:
      - Applications
      operationId: saveAllApplicationsTotalScore
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /applications/renew:
    post:
      tags:
      - Applications
      operationId: renewApplication
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDTO'
  /applications/financing:
    post:
      tags:
      - Financing
      operationId: createFinancing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFinancingDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingDTO'
  /applications/extra-activities:
    post:
      tags:
      - Extra Activities
      operationId: createExtraActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtraActivityDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraActivityDTO'
  /applications/eligibility-check/{sessionId}:
    post:
      tags:
      - Applications
      operationId: checkAllApplicationsEligibility
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /users/toggle-active/{id}:
    patch:
      tags:
      - Users
      operationId: toggleActiveUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /users/avatar:
    patch:
      tags:
      - Users
      operationId: changeAvatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeAvatarDTO'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /auth/change-email/{email}:
    patch:
      tags:
      - Auth
      operationId: changeEmail
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /applications/{id}/steps/complete/{step}:
    patch:
      tags:
      - Applications
      operationId: markStepAsCompleted
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: step
        in: path
        required: true
        schema:
          type: string
          enum:
          - DECLARATION
          - NEXT_YEAR_PLAN
          - ACTIVITIES
          - DOCUMENTS
          - FAMILY
          - HIGH_SCHOOL_RESUME
          - SCHOOL_RESULT
          - FINANCING
          - MOTIVATION
          - RATING
      responses:
        "204":
          description: No Content
  /applications/{id}/motivation:
    patch:
      tags:
      - Applications
      operationId: saveMotivation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveMotivationDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDTO'
  /applications/{id}/approbation:
    patch:
      tags:
      - Applications
      operationId: toggleApprobation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationApprobationDTO'
        required: true
      responses:
        "204":
          description: No Content
  /users/me:
    get:
      tags:
      - Users
      operationId: getProfile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
  /statistics:
    get:
      tags:
      - Statistics
      operationId: getStatistics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsDTO'
  /sessions/{id}/statistics:
    get:
      tags:
      - Sessions
      operationId: findSessionStats
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionStatDTO'
  /sessions/{id}/ratings:
    get:
      tags:
      - Sessions
      operationId: getRatingsBySession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: sort
        in: query
        required: false
        schema:
          type: string
          default: created:DESC
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSessionRatingDTO'
  /sessions/{id}/previous/statistics:
    get:
      tags:
      - Sessions
      operationId: findPreviousSessionStats
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionStatDTO'
  /sessions/current:
    get:
      tags:
      - Sessions
      operationId: getCurrentSession
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionDTO'
  /school-results/application/{id}:
    get:
      tags:
      - SchoolResults
      operationId: findSchoolResultByApplicationId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolResultDTO'
  /school-levels:
    get:
      tags:
      - School Levels
      operationId: findSchoolLevels
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolLevelDTO'
  /quotes/random:
    get:
      tags:
      - Quotes
      operationId: findRandomQuotes
      parameters:
      - name: count
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 5
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteDTO'
  /high-school-resumes/application/{id}:
    get:
      tags:
      - HighSchoolResume
      operationId: findHighSchoolResumeByApplicationId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolResumeDTO'
  /handicaps:
    get:
      tags:
      - Handicaps
      operationId: findAllHandicaps
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HandicapDTO'
  /handicaps/{id}:
    get:
      tags:
      - Handicaps
      operationId: findHandicapById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandicapDTO'
    delete:
      tags:
      - Handicaps
      operationId: deleteHandicap
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /files/users/avatars/{filename}:
    get:
      tags:
      - Files
      operationId: getUserAvatar
      parameters:
      - name: filename
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /files/transcripts/{filename}:
    get:
      tags:
      - Files
      operationId: getTranscript
      parameters:
      - name: filename
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /files/quote-avatars/{filename}:
    get:
      tags:
      - Files
      operationId: getQuoteAvatar
      parameters:
      - name: filename
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /files/file/{filename}:
    get:
      tags:
      - Files
      operationId: getFile
      parameters:
      - name: filename
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /files/documents/{filename}:
    get:
      tags:
      - Files
      operationId: getDocument
      parameters:
      - name: filename
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /files/birth-certificates/{filename}:
    get:
      tags:
      - Files
      operationId: getBirthCertificate
      parameters:
      - name: filename
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /families/user/{id}:
    get:
      tags:
      - Family
      operationId: findFamilyByStudent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyDTO'
  /families/application/{id}:
    get:
      tags:
      - Family
      operationId: findFamilyByApplicationId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyDTO'
  /families/application/current:
    get:
      tags:
      - Family
      operationId: findFamilyByCurrentUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyDTO'
  /documents/application/{id}:
    get:
      tags:
      - Documents
      operationId: findDocumentsByApplicationId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentDTO'
  /document-types:
    get:
      tags:
      - DocumentTypes
      operationId: findAllDocumentTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentTypeDTO'
  /bac-types:
    get:
      tags:
      - BacTypes
      operationId: findAllBacTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BacTypeDTO'
  /applications/{id}/score:
    get:
      tags:
      - Applications
      operationId: computeScore
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationScoreDTO'
  /applications/{id}/financing:
    get:
      tags:
      - Financing
      operationId: findFinancingByApplication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FinancingDTO'
  /applications/{id}/extra-activities:
    get:
      tags:
      - Extra Activities
      operationId: findExtraActivitiesByApplication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtraActivityDTO'
  /applications/user/my:
    get:
      tags:
      - Applications
      operationId: findUserApplications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CandidateDTO'
  /applications/user/current:
    get:
      tags:
      - Applications
      operationId: findUserCurrentApplication
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDTO'
  /applications/renewable:
    get:
      tags:
      - Applications
      operationId: canRenewApplication
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /applications/export/{format}:
    get:
      tags:
      - Applications
      operationId: exportCandidates
      parameters:
      - name: page
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: sort
        in: query
        required: false
        schema:
          type: string
          default: created:DESC
      - name: filter
        in: query
        required: false
        schema:
          type: string
      - name: format
        in: path
        required: true
        schema:
          type: string
          enum:
          - PDF
          - EXCEL
          - CSV
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /users/{id}:
    delete:
      tags:
      - Users
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /documents/{id}:
    delete:
      tags:
      - Documents
      operationId: deleteDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /document-types/{id}:
    delete:
      tags:
      - DocumentTypes
      operationId: deleteDocumentType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /bac-types/{id}:
    delete:
      tags:
      - BacTypes
      operationId: deleteBacType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /auth:
    delete:
      tags:
      - Auth
      operationId: deleteAccount
      responses:
        "204":
          description: No Content
components:
  schemas:
    UpdateUserDTO:
      required:
      - firstName
      - lastName
      type: object
      properties:
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Fast name
    HandicapDTO:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
      description: student handicap
      nullable: true
    RoleDTO:
      required:
      - description
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          description: Role name
          enum:
          - ADMIN
          - STUDENT
        description:
          type: string
          description: Role description
    StudentDTO:
      required:
      - birthDate
      - birthPlace
      - country
      - countryOfBirth
      - created
      - district
      - familyPhoneNumber
      - hasDisability
      - id
      - mobileNumber
      - modified
      - nationality
      - neighborhood
      - region
      - regionOfBirth
      - sex
      - town
      type: object
      properties:
        id:
          type: integer
          format: int32
        sex:
          type: string
          enum:
          - M
          - F
        birthDate:
          type: string
          format: date-time
        birthPlace:
          maxLength: 100
          type: string
        otherName:
          maxLength: 100
          type: string
        nationality:
          maxLength: 100
          type: string
        country:
          maxLength: 100
          type: string
        region:
          maxLength: 100
          type: string
        town:
          maxLength: 100
          type: string
        district:
          maxLength: 100
          type: string
        familyPhoneNumber:
          maxLength: 100
          type: string
        neighborhood:
          maxLength: 100
          type: string
        otherFamilyContact:
          maxLength: 100
          type: string
          description: The other way to contact the family
        fixNumber:
          maxLength: 20
          type: string
        mobileNumber:
          maxLength: 20
          type: string
        countryOfBirth:
          maxLength: 100
          type: string
        regionOfBirth:
          maxLength: 100
          type: string
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
        hasDisability:
          type: boolean
          description: Whether the student has an handicap or not
        handicap:
          $ref: '#/components/schemas/HandicapDTO'
      description: Related student
    UserDTO:
      required:
      - accountVerified
      - active
      - created
      - email
      - firstName
      - id
      - lastName
      - modified
      - role
      - username
      - version
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        active:
          type: boolean
          description: Is the account active
        accountVerified:
          type: boolean
          description: Is the account verified
        avatar:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/RoleDTO'
        student:
          $ref: '#/components/schemas/StudentDTO'
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
        createdBy:
          type: string
          description: Created by
        modifiedBy:
          type: string
          description: Lastly modified by
        version:
          type: integer
          description: Number of modification
          format: int32
    UpdateStudentDTO:
      required:
      - birthDate
      - birthPlace
      - countryOfBirth
      - familyPhoneNumber
      - hasDisability
      - nationality
      - neighborhood
      - regionOfBirth
      - sex
      type: object
      properties:
        sex:
          type: string
          enum:
          - M
          - F
        birthDate:
          type: string
          format: date-time
        birthPlace:
          maxLength: 100
          type: string
        otherName:
          maxLength: 100
          type: string
        nationality:
          maxLength: 100
          type: string
        country:
          maxLength: 100
          type: string
        region:
          maxLength: 100
          type: string
        town:
          maxLength: 100
          type: string
        district:
          maxLength: 100
          type: string
        familyPhoneNumber:
          maxLength: 100
          type: string
        neighborhood:
          maxLength: 100
          type: string
        otherFamilyContact:
          maxLength: 100
          type: string
          description: The other way to contact the family
        fixNumber:
          maxLength: 20
          type: string
        mobileNumber:
          maxLength: 20
          type: string
        countryOfBirth:
          maxLength: 100
          type: string
        regionOfBirth:
          maxLength: 100
          type: string
        hasDisability:
          type: boolean
          description: Whether the student has an handicap or not
        handicap:
          $ref: '#/components/schemas/HandicapDTO'
    UpdateSessionDTO:
      required:
      - endDate
      - name
      - nbCandidatesToSelect
      - passScore
      - startDate
      - year
      type: object
      properties:
        name:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        year:
          maximum: 2200
          minimum: 1970
          type: integer
          format: int32
        passScore:
          type: number
          format: double
        nbCandidatesToSelect:
          type: integer
          description: Number of candidates to be selected
          format: int32
        completionNoticeFr:
          type: string
          description: French completion notice
        applicationGuidelinesFr:
          type: string
          description: French application guidelines
        completionNoticeEn:
          type: string
          description: English completion notice
        applicationGuidelinesEn:
          type: string
          description: English application guidelines
        completionNoticeIt:
          type: string
          description: Italiano completion notice
        applicationGuidelinesIt:
          type: string
          description: Italiano application guidelines
        version:
          type: integer
          format: int64
    SessionDTO:
      required:
      - created
      - endDate
      - id
      - modified
      - name
      - nbCandidatesToSelect
      - passScore
      - startDate
      - status
      - version
      - year
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        year:
          maximum: 2200
          minimum: 1970
          type: integer
          format: int32
        status:
          type: string
          enum:
          - NEW
          - OPEN
          - SUSPENDED
          - CLOSED
        passScore:
          type: number
          format: double
        nbCandidatesToSelect:
          type: integer
          description: Number of candidates to be selected
          format: int32
        completionNoticeFr:
          type: string
          description: French completion notice
        applicationGuidelinesFr:
          type: string
          description: French application guidelines
        completionNoticeEn:
          type: string
          description: English completion notice
        applicationGuidelinesEn:
          type: string
          description: English application guidelines
        completionNoticeIt:
          type: string
          description: Italiano completion notice
        applicationGuidelinesIt:
          type: string
          description: Italiano application guidelines
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
        createdBy:
          type: string
          description: Created by
        modifiedBy:
          type: string
          description: Lastly modified by
        version:
          type: integer
          description: Number of modification
          format: int64
    CreateSchoolResultDTO:
      required:
      - achievedCredit
      - annualAverage
      - totalCredit
      type: object
      properties:
        annualAverage:
          type: number
        totalCredit:
          type: number
        achievedCredit:
          type: number
        faculty:
          type: string
          nullable: true
        option:
          type: string
          description: which option in the faculty ?
        licence:
          type: string
          description: Licence's diploma
          nullable: true
        baccalaureate:
          type: string
          nullable: true
        licenceGrade:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
    SchoolResultDTO:
      required:
      - achievedCredit
      - annualAverage
      - created
      - id
      - totalCredit
      type: object
      properties:
        id:
          type: integer
          format: int32
        annualAverage:
          type: number
        totalCredit:
          type: number
        achievedCredit:
          type: number
        faculty:
          type: string
        option:
          type: string
          description: Which option in the faculty ?
        licence:
          type: string
          description: Licence diploma
        baccalaureate:
          type: string
          description: Baccalaureate diploma
        licenceGrade:
          type: string
        note:
          type: string
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
    CreateQuoteDTO:
      required:
      - content
      - fullName
      - position
      type: object
      properties:
        fullName:
          maxLength: 50
          type: string
          description: Full name
        position:
          maxLength: 50
          type: string
        company:
          maxLength: 100
          type: string
        content:
          maxLength: 500
          type: string
        image:
          type: string
          format: binary
    QuoteDTO:
      required:
      - content
      - fullName
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        fullName:
          maxLength: 50
          type: string
        position:
          maxLength: 50
          type: string
        company:
          maxLength: 100
          type: string
        avatar:
          type: string
        content:
          maxLength: 500
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    BacTypeDTO:
      required:
      - id
      - name
      - system
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        system:
          type: string
          enum:
          - ANGLOPHONE
          - FRANCOPHONE
        description:
          type: string
    CreateHighSchoolResumeDTO:
      required:
      - bacType
      - issueDate
      - schoolAddress
      - schoolName
      type: object
      properties:
        schoolName:
          type: string
        schoolAddress:
          type: string
        bacType:
          $ref: '#/components/schemas/BacTypeDTO'
        issueDate:
          type: string
          format: date-time
        finalGrade:
          type: number
          description: For the francophone education system
        finalGradeAnglophone:
          type: string
          description: For the anglophone education system
        religiousGrade:
          type: number
    HighSchoolResumeDTO:
      required:
      - bacType
      - created
      - id
      - issueDate
      - schoolAddress
      - schoolName
      type: object
      properties:
        id:
          type: integer
          format: int32
        schoolName:
          type: string
        schoolAddress:
          type: string
        bacType:
          $ref: '#/components/schemas/BacTypeDTO'
        issueDate:
          type: string
          format: date-time
        finalGrade:
          type: number
          description: For the francophone education system
        finalGradeAnglophone:
          type: string
          description: For the anglophone education system
        religiousGrade:
          type: number
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
    CreateFamilyDTO:
      required:
      - familyLivesInDschang
      - hasChildren
      - hasComputer
      - hasLiveStock
      - hasTV
      - hasWater
      - houseType
      - landMainActivity
      - landType
      - livesWithFamily
      - neighborhood
      - numberOfMembers
      - numberOfRooms
      - toiletType
      - transportType
      type: object
      properties:
        livesWithFamily:
          type: boolean
        familyLivesInDschang:
          type: boolean
        neighborhood:
          maxLength: 100
          type: string
        numberOfMembers:
          type: integer
          format: int32
        hasChildren:
          type: boolean
        houseType:
          type: string
          enum:
          - OWN_HOUSE
          - OWN_HOUSE_POLYGAMY
          - LOCATION
          - HOMELESS
        toiletType:
          type: string
          enum:
          - "NO"
          - PRIVATE
          - COMMON
        transportType:
          type: string
          enum:
          - "NO"
          - YES_MOTORCYCLE
          - OWN_MOTORCYCLE_VEHICLE
          - YES_LEAST_ONE_VEHICLE
          - YES_MORE_MOTORCYCLE
        landType:
          type: string
          enum:
          - "NO"
          - OWN_PARCEL
          - RENT_PLOT_LAND
          - GROWN_PLOT_DONT_BELONG_US
        rentPrice:
          type: number
        numberOfRooms:
          type: integer
          format: int32
        hasWater:
          type: boolean
        hasTV:
          type: boolean
        hasComputer:
          type: boolean
        hasLiveStock:
          type: boolean
        numberOfCows:
          type: integer
          format: int32
        numberOfGoats:
          type: integer
          format: int32
        numberOfPigs:
          type: integer
          format: int32
        numberOfChicken:
          type: integer
          format: int32
        numberOfRabbits:
          type: integer
          format: int32
        otherLivestock:
          type: integer
          format: int32
        landMainActivity:
          type: string
          enum:
          - SUBSISTENCE_FARMING
          - AGRICULTURE_INCOME
          - RENT
          - NOT_USED
          - NO_PLOT_LAND
        note:
          type: string
    FamilyDTO:
      required:
      - created
      - familyLivesInDschang
      - hasChildren
      - hasComputer
      - hasLiveStock
      - hasTV
      - hasWater
      - houseType
      - id
      - landMainActivity
      - landType
      - livesWithFamily
      - neighborhood
      - numberOfMembers
      - numberOfRooms
      - toiletType
      - transportType
      type: object
      properties:
        id:
          type: integer
          format: int64
        livesWithFamily:
          type: boolean
        familyLivesInDschang:
          type: boolean
        neighborhood:
          maxLength: 100
          type: string
        numberOfMembers:
          type: integer
          format: int32
        hasChildren:
          type: boolean
        houseType:
          type: string
          enum:
          - OWN_HOUSE
          - OWN_HOUSE_POLYGAMY
          - LOCATION
          - HOMELESS
        toiletType:
          type: string
          enum:
          - "NO"
          - PRIVATE
          - COMMON
        transportType:
          type: string
          enum:
          - "NO"
          - YES_MOTORCYCLE
          - OWN_MOTORCYCLE_VEHICLE
          - YES_LEAST_ONE_VEHICLE
          - YES_MORE_MOTORCYCLE
        landType:
          type: string
          enum:
          - "NO"
          - OWN_PARCEL
          - RENT_PLOT_LAND
          - GROWN_PLOT_DONT_BELONG_US
        rentPrice:
          type: number
        numberOfRooms:
          type: integer
          format: int32
        hasWater:
          type: boolean
        hasTV:
          type: boolean
        hasComputer:
          type: boolean
        hasLiveStock:
          type: boolean
        numberOfCows:
          type: integer
          format: int32
        numberOfGoats:
          type: integer
          format: int32
        numberOfPigs:
          type: integer
          format: int32
        numberOfChicken:
          type: integer
          format: int32
        numberOfRabbits:
          type: integer
          format: int32
        otherLivestock:
          type: integer
          format: int32
        landMainActivity:
          type: string
          enum:
          - SUBSISTENCE_FARMING
          - AGRICULTURE_INCOME
          - RENT
          - NOT_USED
          - NO_PLOT_LAND
        note:
          type: string
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
        student:
          $ref: '#/components/schemas/StudentDTO'
    CreateFamilyMemberDTO:
      required:
      - birthYear
      - hasHandicap
      - mainIncomeType
      - maritalStatus
      - relationship
      - residence
      - schoolLevel
      - sex
      type: object
      properties:
        relationship:
          type: string
          enum:
          - MOTHER
          - FATHER
          - BROTHER_SISTER
          - HUSBAND_WIFE
          - GRANDFATHER_GRANDMOTHER
          - UNCLE_AUNT
          - COUSIN
          - OTHER
        maritalStatus:
          type: string
          enum:
          - SINGLE
          - MARRIED
          - COHABITANT
          - DIVORCED
          - WIDOWER
          - OTHER
        schoolLevel:
          type: string
          enum:
          - UNSCHOOLED
          - PRIMARY_SCHOOL
          - SECONDARY_SCHOOL
          - HIGHER_SCHOOL
          - TERTIARY_SCHOOL
          - SCHOOL_LEVEL_COMPLETED
        otherIncomeType:
          type: string
          enum:
          - OTHER_SALARY
          - PENSION
          - INTEREST
          - COUNTRY_ACTIVITY
          - SUPPORT_PERSON
          - NO_OTHER_SOURCE
          - OTHER
        mainIncomeType:
          type: string
          enum:
          - SALARY
          - PENSION
          - GRANT_OTHER_PAYMENT
          - HERITAGE_INCOME
          - OTHER_SCHOLARSHIP
          - SUPPORTED_RELATIVES
          - SUPPORTED_OTHER_PEOPLE
          - SUPPORTED_BY_PARENTS
        sex:
          type: string
          enum:
          - M
          - F
        birthYear:
          type: integer
          format: int32
        residence:
          type: string
        mainActivity:
          type: string
        employer:
          type: string
        hasHandicap:
          type: boolean
          description: Whether the member has any disability or not
        salary:
          minimum: 0
          type: number
        otherIncomeAmount:
          minimum: 0
          type: number
    FamilyMemberDTO:
      required:
      - birthYear
      - created
      - hasHandicap
      - id
      - mainIncomeType
      - maritalStatus
      - relationship
      - residence
      - schoolLevel
      - sex
      type: object
      properties:
        id:
          type: integer
          format: int32
        relationship:
          type: string
          enum:
          - MOTHER
          - FATHER
          - BROTHER_SISTER
          - HUSBAND_WIFE
          - GRANDFATHER_GRANDMOTHER
          - UNCLE_AUNT
          - COUSIN
          - OTHER
        maritalStatus:
          type: string
          enum:
          - SINGLE
          - MARRIED
          - COHABITANT
          - DIVORCED
          - WIDOWER
          - OTHER
        schoolLevel:
          type: string
          enum:
          - UNSCHOOLED
          - PRIMARY_SCHOOL
          - SECONDARY_SCHOOL
          - HIGHER_SCHOOL
          - TERTIARY_SCHOOL
          - SCHOOL_LEVEL_COMPLETED
        otherIncomeType:
          type: string
          enum:
          - OTHER_SALARY
          - PENSION
          - INTEREST
          - COUNTRY_ACTIVITY
          - SUPPORT_PERSON
          - NO_OTHER_SOURCE
          - OTHER
        mainIncomeType:
          type: string
          enum:
          - SALARY
          - PENSION
          - GRANT_OTHER_PAYMENT
          - HERITAGE_INCOME
          - OTHER_SCHOLARSHIP
          - SUPPORTED_RELATIVES
          - SUPPORTED_OTHER_PEOPLE
          - SUPPORTED_BY_PARENTS
        sex:
          type: string
          enum:
          - M
          - F
        birthYear:
          type: integer
          format: int32
        residence:
          type: string
        mainActivity:
          type: string
        employer:
          type: string
        hasHandicap:
          type: boolean
          description: Whether the member has any disability or not
        salary:
          type: number
        otherIncomeAmount:
          type: number
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
    SchoolLevelDTO:
      required:
      - created
      - id
      - modified
      - name
      - order
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        order:
          type: integer
          format: int32
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
    UpdateApplicationDTO:
      required:
      - desiredFaculty
      - desiredOption
      - desiredUniversity
      - schoolLevel
      - version
      type: object
      properties:
        university:
          type: string
          description: University in which the candidate is actually studying
        faculty:
          type: string
          description: Faculty in which the candidate is actually studying
        desiredFaculty:
          type: string
          description: Faculty in which the candidate would like to study
        desiredUniversity:
          type: string
          description: University in which the candidate would like to study
        schoolLevel:
          $ref: '#/components/schemas/SchoolLevelDTO'
        desiredOption:
          type: string
          description: Option in which the candidate would like to study
        nextYearTown:
          type: string
        version:
          type: integer
          description: Modification number
          format: int64
    ApplicationDTO:
      required:
      - activitiesSaved
      - approved
      - canSubmit
      - created
      - declarationSaved
      - desiredFaculty
      - desiredOption
      - desiredUniversity
      - documentsSaved
      - eligible
      - familySaved
      - financingSaved
      - id
      - motivationSaved
      - ratingSaved
      - schoolLevel
      - schoolResultsSaved
      - session
      - student
      - submitted
      - type
      - universityStudent
      - version
      type: object
      properties:
        id:
          type: integer
          format: int32
        university:
          type: string
          description: University in which the candidate is studying
        faculty:
          type: string
          description: University in which the candidate is studying
        universityStudent:
          type: boolean
          description: Whether the candidate is at university or not
        declaration:
          type: string
        motivation:
          maxLength: 65000
          type: string
        desiredFaculty:
          type: string
          description: Faculty in which the candidate would like to study
        desiredUniversity:
          type: string
          description: University in which the candidate would like to study
        desiredOption:
          type: string
          description: Option in which the candidate would like to study
        nextYearTown:
          type: string
        approved:
          type: boolean
        submitted:
          type: boolean
        eligible:
          type: boolean
        ineligibilityReason:
          type: string
          description: Reason for ineligibility
        canSubmit:
          type: boolean
        rejectReason:
          type: string
        type:
          type: string
          enum:
          - NEW
          - OLD
          - OLD_ENDING
        session:
          $ref: '#/components/schemas/SessionDTO'
        schoolLevel:
          $ref: '#/components/schemas/SchoolLevelDTO'
        student:
          $ref: '#/components/schemas/StudentDTO'
        familySaved:
          type: boolean
        schoolResultsSaved:
          type: boolean
        documentsSaved:
          type: boolean
        activitiesSaved:
          type: boolean
        declarationSaved:
          type: boolean
        motivationSaved:
          type: boolean
        financingSaved:
          type: boolean
        ratingSaved:
          type: boolean
        version:
          type: integer
          description: Modification number
          format: int32
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
        modifiedBy:
          type: string
          description: Last user who modified the application
        highSchoolResumeSaved:
          type: boolean
    CreateFinancingDTO:
      required:
      - amount
      - organization
      type: object
      properties:
        description:
          type: string
        amount:
          type: number
        organization:
          type: string
        name:
          type: string
    FinancingDTO:
      required:
      - amount
      - created
      - id
      - organization
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
        amount:
          type: number
        organization:
          type: string
        name:
          type: string
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
    CreateExtraActivityDTO:
      required:
      - employer
      - salary
      - title
      type: object
      properties:
        title:
          type: string
        employer:
          type: string
        incomeType:
          type: string
          enum:
          - OTHER_SALARY
          - PENSION
          - INTEREST
          - COUNTRY_ACTIVITY
          - SUPPORT_PERSON
          - NO_OTHER_SOURCE
          - OTHER
        salary:
          type: number
        annualIncome:
          type: number
        survivalIncomeType:
          type: string
          enum:
          - SALARY
          - PENSION
          - GRANT_OTHER_PAYMENT
          - HERITAGE_INCOME
          - OTHER_SCHOLARSHIP
          - SUPPORTED_RELATIVES
          - SUPPORTED_OTHER_PEOPLE
          - SUPPORTED_BY_PARENTS
        disability:
          type: boolean
    ExtraActivityDTO:
      required:
      - created
      - employer
      - id
      - modified
      - salary
      - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        employer:
          type: string
        incomeType:
          type: string
          enum:
          - OTHER_SALARY
          - PENSION
          - INTEREST
          - COUNTRY_ACTIVITY
          - SUPPORT_PERSON
          - NO_OTHER_SOURCE
          - OTHER
        salary:
          type: number
        annualIncome:
          type: number
        survivalIncomeType:
          type: string
          enum:
          - SALARY
          - PENSION
          - GRANT_OTHER_PAYMENT
          - HERITAGE_INCOME
          - OTHER_SCHOLARSHIP
          - SUPPORTED_RELATIVES
          - SUPPORTED_OTHER_PEOPLE
          - SUPPORTED_BY_PARENTS
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
        disability:
          type: boolean
    CreateSessionDTO:
      required:
      - endDate
      - name
      - nbCandidatesToSelect
      - passScore
      - startDate
      - year
      type: object
      properties:
        name:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        year:
          maximum: 2200
          minimum: 1970
          type: integer
          format: int32
        passScore:
          type: number
          format: double
        nbCandidatesToSelect:
          type: integer
          description: Number of candidates to be selected
          format: int32
        completionNoticeFr:
          type: string
          description: French completion notice
        applicationGuidelinesFr:
          type: string
          description: French application guidelines
        completionNoticeEn:
          type: string
          description: English completion notice
        applicationGuidelinesEn:
          type: string
          description: English application guidelines
        completionNoticeIt:
          type: string
          description: Italiano completion notice
        applicationGuidelinesIt:
          type: string
          description: Italiano application guidelines
    UploadDocumentDTO:
      required:
      - file
      - typeId
      type: object
      properties:
        typeId:
          type: integer
          format: int64
        file:
          type: string
          format: binary
    DocumentDTO:
      required:
      - content
      - created
      - id
      - type
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/DocumentTypeDTO'
        content:
          type: string
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
    DocumentTypeDTO:
      required:
      - created
      - id
      - multiple
      - required
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          maxLength: 100
          type: string
        description:
          type: string
        target:
          type: string
          enum:
          - BOTH
          - STUDENT
          - PUPIL
        required:
          type: boolean
        multiple:
          type: boolean
        created:
          type: string
          description: Creation date
          format: date-time
        modified:
          type: string
          description: Last modification date
          format: date-time
    UploadMultipleDocumentDTO:
      required:
      - files
      - typeId
      type: object
      properties:
        typeId:
          type: integer
          format: int64
        files:
          type: array
          items:
            type: string
            format: binary
    CreateUserDTO:
      required:
      - email
      - firstName
      - lastName
      - password
      - username
      type: object
      properties:
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Fast name
        username:
          type: string
        password:
          type: string
          description: Password
        email:
          type: string
    LoginDTO:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponseDTO:
      required:
      - token
      - user
      type: object
      properties:
        token:
          type: string
          description: Access token
        user:
          $ref: '#/components/schemas/UserDTO'
    PasswordResetDTO:
      required:
      - password
      - token
      type: object
      properties:
        token:
          type: string
          description: Password reset token
        password:
          type: string
          description: New password
    PasswordForgetDTO:
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: Account email
    UpdatePasswordDTO:
      required:
      - newPassword
      - oldPassword
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
    CreateApplicationDTO:
      required:
      - desiredFaculty
      - desiredOption
      - desiredUniversity
      - universityStudent
      type: object
      properties:
        university:
          type: string
          description: University in which the candidate is actually studying
        faculty:
          type: string
          description: Faculty in which the candidate is actually studying
        universityStudent:
          type: boolean
          description: Whether the candidate is at university or not
        declaration:
          type: string
        schoolLevel:
          $ref: '#/components/schemas/SchoolLevelDTO'
        motivation:
          maxLength: 65000
          type: string
        desiredFaculty:
          type: string
          description: Faculty in which the candidate would like to study
        desiredUniversity:
          type: string
          description: University in which the candidate would like to study
        desiredOption:
          type: string
          description: Option in which the candidate would like to study
        nextYearTown:
          type: string
        version:
          type: integer
          description: Modification number
          format: int32
    CreateRatingDTO:
      required:
      - content
      - stars
      type: object
      properties:
        content:
          maxLength: 1000
          type: string
        stars:
          type: number
        suggestion:
          maxLength: 1000
          type: string
    RatingDTO:
      required:
      - content
      - id
      - stars
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          maxLength: 1000
          type: string
        stars:
          type: number
        suggestion:
          maxLength: 1000
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    ChangeAvatarDTO:
      type: object
      properties:
        avatar:
          type: string
          format: binary
    PatchSessionDTO:
      type: object
      properties:
        name:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        year:
          maximum: 2200
          minimum: 1970
          type: integer
          format: int32
        passScore:
          type: number
          format: double
        nbCandidatesToSelect:
          type: integer
          format: int32
        completionNoticeFr:
          type: string
          description: French completion notice
        applicationGuidelinesFr:
          type: string
          description: French application guidelines
        completionNoticeEn:
          type: string
          description: English completion notice
        applicationGuidelinesEn:
          type: string
          description: English application guidelines
        completionNoticeIt:
          type: string
          description: Italiano completion notice
        applicationGuidelinesIt:
          type: string
          description: Italiano application guidelines
        version:
          type: integer
          format: int64
    PatchFamilyDTO:
      type: object
      properties:
        livesWithFamily:
          type: boolean
        familyLivesInDschang:
          type: boolean
        neighborhood:
          maxLength: 100
          type: string
        numberOfMembers:
          type: integer
          format: int32
        hasChildren:
          type: boolean
        houseType:
          type: string
          enum:
          - OWN_HOUSE
          - OWN_HOUSE_POLYGAMY
          - LOCATION
          - HOMELESS
        toiletType:
          type: string
          enum:
          - "NO"
          - PRIVATE
          - COMMON
        transportType:
          type: string
          enum:
          - "NO"
          - YES_MOTORCYCLE
          - OWN_MOTORCYCLE_VEHICLE
          - YES_LEAST_ONE_VEHICLE
          - YES_MORE_MOTORCYCLE
        landType:
          type: string
          enum:
          - "NO"
          - OWN_PARCEL
          - RENT_PLOT_LAND
          - GROWN_PLOT_DONT_BELONG_US
        rentPrice:
          type: number
        numberOfRooms:
          type: integer
          format: int32
        hasWater:
          type: boolean
        hasTV:
          type: boolean
        hasComputer:
          type: boolean
        hasLiveStock:
          type: boolean
        numberOfCows:
          type: integer
          format: int32
        numberOfGoats:
          type: integer
          format: int32
        numberOfPigs:
          type: integer
          format: int32
        numberOfChicken:
          type: integer
          format: int32
        numberOfRabbits:
          type: integer
          format: int32
        otherLivestock:
          type: integer
          format: int32
        landMainActivity:
          type: string
          enum:
          - SUBSISTENCE_FARMING
          - AGRICULTURE_INCOME
          - RENT
          - NOT_USED
          - NO_PLOT_LAND
        note:
          type: string
    SaveMotivationDTO:
      required:
      - motivation
      type: object
      properties:
        motivation:
          maxLength: 65000
          type: string
    ApplicationApprobationDTO:
      required:
      - allowResubmit
      - approved
      type: object
      properties:
        approved:
          type: boolean
        allowResubmit:
          type: boolean
        reason:
          type: string
    PageInfo:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        hasPrevious:
          type: boolean
        hasNext:
          type: boolean
    PageUserDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserDTO'
        metadata:
          $ref: '#/components/schemas/PageInfo'
    StatisticsDTO:
      required:
      - numberOfSessions
      - totalScholarshipsGranted
      - totalValueGranted
      type: object
      properties:
        numberOfSessions:
          type: integer
          description: Number of sessions
          format: int32
        totalScholarshipsGranted:
          type: integer
          description: Number of granted scholarships
          format: int32
        totalValueGranted:
          type: number
          description: Value of all granted Scholarship (money)
          format: double
    PageSessionDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SessionDTO'
        metadata:
          $ref: '#/components/schemas/PageInfo'
    SessionStatDTO:
      required:
      - approvedCandidates
      - eligibleCandidates
      - familyHandicap
      - id
      - newCandidates
      - oldCandidates
      - oldEndingCandidates
      - selfHandicap
      - totalCandidates
      type: object
      properties:
        id:
          type: integer
          description: Session id
          format: int64
        totalCandidates:
          type: integer
          description: Number of candidates
          format: int32
        eligibleCandidates:
          type: integer
          description: Number of eligible candidates
          format: int32
        newCandidates:
          type: integer
          description: Number of new candidates
          format: int32
        oldCandidates:
          type: integer
          description: Number of old candidates
          format: int32
        oldEndingCandidates:
          type: integer
          description: Number of old ending candidates
          format: int32
        approvedCandidates:
          type: integer
          description: Number of candidates approved
          format: int32
        selfHandicap:
          type: integer
          description: Number of self handicap
          format: int32
        familyHandicap:
          type: integer
          description: Number of family handicap
          format: int32
    PageSessionRatingDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SessionRatingDTO'
        metadata:
          $ref: '#/components/schemas/PageInfo'
    SessionRatingDTO:
      type: object
      properties:
        applicationId:
          type: integer
          description: ID de l'application
          format: int64
          example: 1
        firstName:
          type: string
          description: Prénom de l'utilisateur
          example: John
        lastName:
          type: string
          description: Nom de famille de l'utilisateur
          example: Doe
        content:
          type: string
          description: Contenu de l'évaluation
          example: The session was very informative.
        stars:
          type: number
          description: Étoiles attribuées
          example: 4.5
        suggestion:
          type: string
          description: Suggestions pour améliorer
          example: More examples could be provided.
    PageQuoteDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/QuoteDTO'
        metadata:
          $ref: '#/components/schemas/PageInfo'
    CandidateDTO:
      required:
      - approved
      - canSubmit
      - desiredFaculty
      - eligible
      - id
      - name
      - score
      - sessionId
      - sessionStatus
      - sex
      - status
      - type
      - university
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        sex:
          type: string
          enum:
          - M
          - F
        university:
          type: string
        desiredFaculty:
          type: string
        type:
          type: string
          enum:
          - NEW
          - OLD
          - OLD_ENDING
        status:
          type: string
          enum:
          - PENDING
          - APPROVED
          - REJECTED
        canSubmit:
          type: boolean
        regionOfBirth:
          type: string
        region:
          type: string
        town:
          type: string
        score:
          type: number
          format: double
        eligible:
          type: boolean
        ineligibilityReason:
          type: string
          description: Reason for ineligibility
        approved:
          type: boolean
        sessionId:
          type: integer
          format: int32
        sessionStatus:
          type: string
          enum:
          - NEW
          - OPEN
          - SUSPENDED
          - CLOSED
        rejectReason:
          type: string
    PageCandidateDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CandidateDTO'
        metadata:
          $ref: '#/components/schemas/PageInfo'
    ApplicationScoreDTO:
      required:
      - children
      - computer
      - dependenceRatio
      - economicCondition
      - familyHandicap
      - houseSize
      - houseType
      - land
      - landMainActivity
      - livestock
      - merit
      - selfHandicap
      - toilet
      - total
      - transport
      - tv
      - water
      type: object
      properties:
        merit:
          type: number
          format: double
        economicCondition:
          type: number
          format: double
        computer:
          type: number
          format: double
        dependenceRatio:
          type: number
          format: double
        familyHandicap:
          type: number
          format: double
        children:
          type: number
          format: double
        houseSize:
          type: number
          format: double
        houseType:
          type: number
          format: double
        livestock:
          type: number
          format: double
        selfHandicap:
          type: number
          format: double
        toilet:
          type: number
          format: double
        transport:
          type: number
          format: double
        tv:
          type: number
          format: double
        water:
          type: number
          format: double
        land:
          type: number
          format: double
        landMainActivity:
          type: number
          format: double
        total:
          type: number
          format: double
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
